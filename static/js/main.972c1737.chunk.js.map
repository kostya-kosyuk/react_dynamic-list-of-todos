{"version":3,"sources":["types/filterEnum.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoFilterValues","TodoList","visibleTodos","chooseTodo","choosedTodoId","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","todoFilter","selectTodoFilter","query","setQuery","onSubmit","e","preventDefault","value","onChange","event","sortBy","target","all","active","placeholder","toLowerCase","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","choosedTodo","clearChoosedTodo","useState","user","setUser","useEffect","userId","Number","userFromServer","href","email","name","App","isLoading","setLoading","todos","setTodos","setChoosedTodo","setVisibleTodos","setTodoFilter","data","finally","filter","filterTodos","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.972c1737.chunk.js","sourcesContent":["export enum TodoFilterValues {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[];\n  chooseTodo: (todo: Todo) => void;\n  choosedTodoId: number | undefined;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  chooseTodo,\n  choosedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(choosedTodoId === id\n                && 'has-background-info-light')}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames(`has-text-${completed ? 'success' : 'danger'}`)}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    chooseTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(`far fa-eye${choosedTodoId === id ? '-slash' : ''}`)} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\nimport { TodoFilterValues } from '../../types/filterEnum';\n\ntype Props = {\n  todoFilter: TodoFilterValues;\n  selectTodoFilter: (value: string) => void;\n  query: string;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todoFilter,\n  selectTodoFilter,\n  query,\n  setQuery,\n}) => (\n  <form\n    className=\"field has-addons\"\n    onSubmit={(e) => {\n      e.preventDefault();\n    }}\n  >\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={todoFilter}\n          onChange={(event) => {\n            const sortBy = event.target.value;\n\n            selectTodoFilter(sortBy);\n          }}\n        >\n          <option value={TodoFilterValues.all}>All</option>\n          <option value={TodoFilterValues.active}>Active</option>\n          <option value={TodoFilterValues.completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value.toLowerCase());\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query !== '' && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={(event) => {\n              event.preventDefault();\n              setQuery('');\n            }}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  choosedTodo: Todo | null;\n  clearChoosedTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  choosedTodo,\n  clearChoosedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(Number(choosedTodo?.userId))\n      .then((userFromServer) => setUser(userFromServer));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {choosedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                clearChoosedTodo();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {choosedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {choosedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { TodoFilterValues } from './types/filterEnum';\n\nexport const App: React.FC = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [choosedTodo, setChoosedTodo] = useState<Todo | null>(null);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [\n    todoFilter,\n    setTodoFilter,\n  ] = useState<TodoFilterValues>(TodoFilterValues.all);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n        setVisibleTodos(todos);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const chooseTodo = (todo: Todo) => {\n    setChoosedTodo(todo);\n  };\n\n  const clearChoosedTodo = () => {\n    setChoosedTodo(null);\n  };\n\n  const selectTodoFilter = (value: string) => {\n    setTodoFilter(value as TodoFilterValues);\n  };\n\n  const filterTodos = (value: TodoFilterValues = todoFilter) => {\n    if (value === TodoFilterValues.all || !todos) {\n      return todos;\n    }\n\n    const filteredTodos = todos.filter(({ completed }) => {\n      switch (value) {\n        case TodoFilterValues.active:\n          return !completed;\n          break;\n\n        case TodoFilterValues.completed:\n          return completed;\n          break;\n\n        default:\n          return true;\n          break;\n      }\n    });\n\n    return filteredTodos;\n  };\n\n  useEffect(() => {\n    setVisibleTodos(filterTodos()\n      .filter((todo) => todo.title.toLowerCase().includes(query)));\n  }, [todoFilter, todos, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todoFilter={todoFilter}\n                selectTodoFilter={selectTodoFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    visibleTodos={visibleTodos}\n                    chooseTodo={chooseTodo}\n                    choosedTodoId={choosedTodo?.id}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {choosedTodo\n      && (\n        <TodoModal\n          choosedTodo={choosedTodo}\n          clearChoosedTodo={clearChoosedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}